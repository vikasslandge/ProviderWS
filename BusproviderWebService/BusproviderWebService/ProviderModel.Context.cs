//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusproviderWebService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProvidersWS_DBEntities : DbContext
    {
        public ProvidersWS_DBEntities()
            : base("name=ProvidersWS_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BusDetail> BusDetails { get; set; }
        public virtual DbSet<ProviderDetail> ProviderDetails { get; set; }
        public virtual DbSet<SeatBookingStatu> SeatBookingStatus { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual ObjectResult<GetProviderDetails_Result> GetProviderDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProviderDetails_Result>("GetProviderDetails");
        }
    
        public virtual int InsertBusDetails(string busNo, string busname, Nullable<int> capacity, string type, Nullable<int> providerId)
        {
            var busNoParameter = busNo != null ?
                new ObjectParameter("busNo", busNo) :
                new ObjectParameter("busNo", typeof(string));
    
            var busnameParameter = busname != null ?
                new ObjectParameter("busname", busname) :
                new ObjectParameter("busname", typeof(string));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("capacity", capacity) :
                new ObjectParameter("capacity", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var providerIdParameter = providerId.HasValue ?
                new ObjectParameter("providerId", providerId) :
                new ObjectParameter("providerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBusDetails", busNoParameter, busnameParameter, capacityParameter, typeParameter, providerIdParameter);
        }
    
        public virtual int DeleteBusRecord(string busNo)
        {
            var busNoParameter = busNo != null ?
                new ObjectParameter("busNo", busNo) :
                new ObjectParameter("busNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBusRecord", busNoParameter);
        }
    }
}
